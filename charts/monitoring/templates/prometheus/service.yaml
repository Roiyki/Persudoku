{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "kube-prometheus-stack.fullname" . }}-prometheus
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}-prometheus
    self-monitor: {{ .Values.prometheus.serviceMonitor.selfMonitor | quote }}
{{ include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.prometheus.service.labels }}
{{ toYaml .Values.prometheus.service.labels | indent 4 }}
{{- end }}
{{- if .Values.prometheus.service.annotations }}
  annotations:
{{ toYaml .Values.prometheus.service.annotations | indent 4 }}
{{- end }}
spec:
  type: ClusterIP  # Always default to ClusterIP
  {{- if .Values.prometheus.service.type }}
  type: {{ .Values.prometheus.service.type }}
  {{- end }}
  {{- with .Values.prometheus.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  {{- if .Values.prometheus.service.ipDualStack.enabled }}
  ipFamilies: {{ toYaml .Values.prometheus.service.ipDualStack.ipFamilies | nindent 4 }}
  ipFamilyPolicy: {{ .Values.prometheus.service.ipDualStack.ipFamilyPolicy }}
  {{- end }}
  {{- if .Values.prometheus.service.externalIPs }}
  externalIPs:
  {{- toYaml .Values.prometheus.service.externalIPs | nindent 4 }}
  {{- end }}
  {{- if .Values.prometheus.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.prometheus.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.prometheus.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml .Values.prometheus.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if ne .Values.prometheus.service.type "ClusterIP" }}
  externalTrafficPolicy: {{ .Values.prometheus.service.externalTrafficPolicy }}
  {{- end }}
  ports:
    - name: {{ .Values.prometheus.prometheusSpec.portName }}
      port: {{ .Values.prometheus.service.port }}
      targetPort: {{ .Values.prometheus.service.targetPort }}
      {{- if eq .Values.prometheus.service.type "NodePort" }}
      nodePort: 32100
      {{- end }}
    - name: reloader-web
      {{- if semverCompare "> 1.20.0-0" .Capabilities.KubeVersion.GitVersion }}
      appProtocol: http
      {{- end }}
      port: {{ .Values.prometheus.service.reloaderWebPort }}
      targetPort: reloader-web
    {{- if .Values.prometheus.thanosIngress.enabled }}
    - name: grpc
      port: {{ .Values.prometheus.thanosIngress.servicePort }}
      targetPort: {{ .Values.prometheus.thanosIngress.servicePort }}
      {{- if eq .Values.prometheus.service.type "NodePort" }}
      nodePort: {{ .Values.prometheus.thanosIngress.nodePort }}
      {{- end }}
    {{- end }}
  {{- if .Values.prometheus.service.additionalPorts }}
  {{ toYaml .Values.prometheus.service.additionalPorts | indent 2 }}
  {{- end }}
  publishNotReadyAddresses: {{ .Values.prometheus.service.publishNotReadyAddresses }}
  selector:
    {{- if .Values.prometheus.agentMode }}
    app.kubernetes.io/name: prometheus-agent
    {{- else }}
    app.kubernetes.io/name: prometheus
    {{- end }}
    operator.prometheus.io/name: {{ template "kube-prometheus-stack.prometheus.crname" . }}
  {{- if .Values.prometheus.service.sessionAffinity }}
  sessionAffinity: {{ .Values.prometheus.service.sessionAffinity }}
  {{- end }}
  {{- if eq .Values.prometheus.service.sessionAffinity "ClientIP" }}
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: {{ .Values.prometheus.service.sessionAffinityConfig.clientIP.timeoutSeconds }}
  {{- end }}
{{- end }}
