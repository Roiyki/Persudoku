# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.boot_timeout = 600

  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    vb.customize ['modifyvm', :id, '--graphicscontroller', 'vmsvga']
    vb.gui = false
    vb.memory = "2048"
    vb.cpus = 4
  end

  # Define the VM
  config.vm.define "pyapp" do |server|
    server.vm.box = "ubuntu/focal64"
    # Configuring networking settings
    server.vm.network "forwarded_port", guest: 80, host: 8888
    server.vm.network "forwarded_port", guest: 5000, host: 5000
    server.vm.network "private_network", ip: "192.168.50.68"

    # Provisioning
    server.vm.provision "shell" do |shell|
      shell.inline = <<-SHELL
        # Install Docker and dependencies
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        # Install KinD
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.10.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

        # Create KinD cluster
        kind create cluster --name my-cluster

        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

        # Install Helm
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

        # Clone your Git repository
        git clone https://github.com/Roiyki/Persudoku.git
        cd Persudoku/charts/appchart

        # Serve the Helm chart repository over HTTP
        python3 -m http.server 8080 &

        # Wait for the HTTP server to start
        sleep 10

        # Check if the HTTP server is running
        if curl -s http://localhost:8080/index.yaml; then
          echo "HTTP server is running"
        else
          echo "HTTP server failed to start"
          exit 1
        fi

        # Add the Helm chart repository to Helm
        helm repo add my-repo http://localhost:8080
        helm repo update

        # Create the namespace for MongoDB
        kubectl create namespace mongo-namespace

        # Install the Helm chart
        helm install sudoku-app my-repo/appchart

        #Get applications url
        export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services sudoku-app-appchart)
        export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
        echo http://$NODE_IP:$NODE_PORT
      SHELL
    end
  end
end
